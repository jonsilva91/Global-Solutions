---
title: "Analise_Flood_Sentinel"
format:
  html: default
  pdf:  default
editor: visual
---

## Análise Exploratória e Explanatória em R para o conjunto “flood.csv”

## Instalar pacotes

```{r, echo=FALSE}
options(repos = c(CRAN = "https://cloud.r-project.org"))
install.packages(c("tidyverse", "GGally", "corrplot", "knitr","gridExtra","Metrics"))
```

Carregar as bibliotecas

```{r}
library(tidyverse)
library(GGally)       
library(corrplot)     
library(knitr)        
```

Carregamento dos Dados

```{r}
df <- read_csv("flood.csv", col_types = cols())

```

Verificar dimensões e colunas

```{r}
cat("Dimensões do dataset:\n")
dim(df)    
cat("\nNomes das colunas:\n")
names(df)
```

Estrutura geral e tipos de cada coluna

```{r}
cat("\nEstrutura (str) do dataset:\n")
str(df)
```

Mostrar as primeiras linhas

```{r}
cat("\nPrimeiras 6 linhas do dataset:\n")
print(head(df, 6))
```

### Análise Exploratória

Estatísticas de resumo (média, mediana, quartis, etc.)

```{r}
cat("\nResumo Estatístico das variáveis numéricas:\n\n")
df %>%
  select_if(is.numeric) %>%
  summary() %>%
  print()
```

Tabela de contagem de valores ausentes (NA) por coluna

```{r}
cat("\nContagem de valores ausentes por coluna:\n\n")
na_summary <- df %>%
  summarize_all(~ sum(is.na(.))) %>%
  gather(key = "variavel", value = "n_missing")
kable(na_summary, col.names = c("Variável", "N de missing"))

```

Distribuição da Variável-Alvo (FloodProbability)

```{r}
ggplot(df, aes(x = FloodProbability)) +
  geom_histogram(bins = 15, fill = "#1f77b4", color = "black", alpha = 0.8) +
  labs(
    title = "Distribuição de FloodProbability",
    x = "Probabilidade de Inundação",
    y = "Frequência"
  ) +
  theme_minimal()

ggplot(df, aes(y = FloodProbability)) +
  geom_boxplot(fill = "#1f77b4", alpha = 0.6) +
  labs(
    title = "Boxplot de FloodProbability",
    y = "Probabilidade de Inundação"
  ) +
  theme_minimal()
```

Distribuição das demais variáveis preditoras

```{r}
library(gridExtra)


variaveis_preditoras <- df %>% select(-FloodProbability)


vars_to_plot <- names(variaveis_preditoras)[1:4]

plot_list <- list()
for (v in vars_to_plot) {
  p <- ggplot(df, aes_string(x = v)) +
       geom_histogram(bins = 15, fill = "#ff7f0e", color = "black", alpha = 0.7) +
       labs(
         title = paste("Distribuição de", v),
         x = v,
         y = "Frequência"
       ) +
       theme_minimal()
  plot_list[[v]] <- p
}


do.call(grid.arrange, c(plot_list, ncol = 2))
```

Matriz de Correlação

```{r}
num_df <- df %>% select_if(is.numeric)
corr_mat <- cor(num_df, use = "pairwise.complete.obs")
```

Exibir matriz de correlação numérica

```{r}
cat("\nMatriz de Correlação (primeiras 6 linhas):\n")
print(round(corr_mat[1:6, 1:6], 2))
```

Correlograma completo

```{r}
corrplot(
  corr_mat,
  method = "color",
  order = "hclust",
  tl.cex = 0.7,
  addCoef.col = "black",
  number.cex = 0.6,
  tl.col = "black",
  col = colorRampPalette(c("blue", "white", "red"))(200),
  title = "Correlograma das Variáveis"
)
```

Pair Plot (GGally) para subconjunto de variáveis

```{r}
corr_flood <- corr_mat[, "FloodProbability"] %>%
  abs() %>%
  sort(decreasing = TRUE)
top_pred <- names(corr_flood)[2:5]
pair_df <- df %>% select(all_of(c("FloodProbability", top_pred)))

ggpairs(
  pair_df,
  upper = list(continuous = wrap("points", alpha = 0.4, size = 0.8)),
  lower = list(continuous = wrap("smooth", se = FALSE, alpha = 0.3)),
  diag = list(continuous = wrap("densityDiag")),
  title = "Pair Plot entre FloodProbability e as 4 variáveis mais correlacionadas"
)
```

## Análise Explanatória

separar variaveis de teste:

```{r}
set.seed(123)
train_indices <- sample(seq_len(nrow(df)), size = 0.7 * nrow(df))
df_train <- df[train_indices, ]
df_test  <- df[-train_indices, ]
```

Modelo de Regressão Linear Múltipla

Selecionamos as 5 variáveis de maior correlação (absoluta) com FloodProbability

```{r}
top5_vars <- names(corr_flood)[2:6] 

cat("\nVariáveis selecionadas para o modelo:", paste(top5_vars, collapse = ", "), "\n")
```

```{r}
formula_modelo <- as.formula(
  paste("FloodProbability ~", paste(top5_vars, collapse = " + "))
)
```

```{r}
modelo_lm <- lm(formula_modelo, data = df_train)
cat("\nResumo do modelo de Regressão Linear:\n")
print(summary(modelo_lm))

```

Avaliar suposições: resíduos vs valores ajustados

```{r}
par(mfrow = c(2, 2))
plot(modelo_lm)
par(mfrow = c(1, 1))

```

Previsão e Métricas no Conjunto de Teste

```{r}
pred_test <- predict(modelo_lm, newdata = df_test)

library(Metrics)  # para RMSE e MAE
rmse_val  <- rmse(df_test$FloodProbability, pred_test)
mae_val   <- mae(df_test$FloodProbability, pred_test)
mape_val  <- mape(df_test$FloodProbability, pred_test) * 100

cat(sprintf("\nMétricas no conjunto de teste:\n  RMSE = %.4f\n  MAE  = %.4f\n  MAPE = %.2f%%\n",
            rmse_val, mae_val, mape_val))

```

Gráfico de Previsão vs Observado

```{r}
df_pred_obs <- tibble(
  Observado  = df_test$FloodProbability,
  Previsto   = pred_test
)

ggplot(df_pred_obs, aes(x = Observado, y = Previsto)) +
  geom_point(alpha = 0.6, color = "#2ca02c") +
  geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
  labs(
    title = "Observado vs Previsto (Conjunto de Teste)",
    x = "FloodProbability Observado",
    y = "FloodProbability Previsto"
  ) +
  theme_minimal()

```

Interpretação dos Resultados

```{r}
cat("\nCoeficientes do modelo:\n")
coef_df <- broom::tidy(modelo_lm)
kable(coef_df, digits = 4, col.names = c("Termo", "Estimativa", "Std. Erro", "t valor", "Pr(>|t|)"))


cat("\nInterpretação resumida:\n")
cat("
- O modelo de regressão explica aproximadamente", round(summary(modelo_lm)$r.squared, 3),
    "dos desvios em FloodProbability (R² ajustado =",
    round(summary(modelo_lm)$adj.r.squared, 3), ").\n
- Variáveis com p-valor < 0.05 indicam influência estatisticamente significativa sobre FloodProbability.
- Os coeficientes positivos (p.ex., se 'DeterioratingInfrastructure' tiver coeff > 0) sugerem que,
  para cada unidade adicional nessa variável, a probabilidade de inundação tende a aumentar, mantidas as demais constantes.
- Da mesma forma, coeficientes negativos indicam relação inversa.\n
- As métricas de erro no conjunto de teste (RMSE =", round(rmse_val, 4),
    ", MAE =", round(mae_val, 4), ", MAPE =", round(mape_val, 2), "%) fornecem feedback sobre o quão bem o modelo está prevendo.\n
- Gráfico Observado vs Previsto: se a maioria dos pontos estiver próxima à linha pontilhada (y = x), o modelo tem bom desempenho.\n
")
```
